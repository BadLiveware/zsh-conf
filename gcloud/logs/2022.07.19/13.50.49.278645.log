2022-07-19 13:50:49,293 DEBUG    root            Loaded Command Group: ['gcloud', 'container', 'clusters']
2022-07-19 13:50:49,296 DEBUG    root            Loaded Command Group: ['gcloud', 'container', 'clusters', 'get_credentials']
2022-07-19 13:50:49,302 DEBUG    google.auth.transport.requests Making request: POST https://oauth2.googleapis.com/token
2022-07-19 13:50:49,303 DEBUG    urllib3.connectionpool Starting new HTTPS connection (1): oauth2.googleapis.com:443
2022-07-19 13:50:49,528 DEBUG    urllib3.connectionpool https://oauth2.googleapis.com:443 "POST /token HTTP/1.1" 400 None
2022-07-19 13:50:50,457 DEBUG    root            No hidraw device is available
Traceback (most recent call last):
  File "/opt/google-cloud-sdk/lib/googlecloudsdk/core/credentials/google_auth_credentials.py", line 102, in refresh
    return self._Refresh(request)
  File "/opt/google-cloud-sdk/lib/googlecloudsdk/core/credentials/google_auth_credentials.py", line 129, in _Refresh
    access_token, refresh_token, expiry, grant_response = _RefreshGrant(
  File "/opt/google-cloud-sdk/lib/googlecloudsdk/core/credentials/google_auth_credentials.py", line 206, in _RefreshGrant
    response_data = _TokenEndpointRequestWithRetry(request, token_uri, body)
  File "/opt/google-cloud-sdk/lib/googlecloudsdk/core/util/retry.py", line 307, in DecoratedFunction
    return retryer.RetryOnException(f, args=args, kwargs=kwargs,
  File "/opt/google-cloud-sdk/lib/googlecloudsdk/core/util/retry.py", line 201, in RetryOnException
    exceptions.reraise(exc_info[1], tb=exc_info[2])
  File "/opt/google-cloud-sdk/lib/googlecloudsdk/core/exceptions.py", line 146, in reraise
    six.reraise(type(exc_value), exc_value, tb)
  File "/opt/google-cloud-sdk/lib/third_party/six/__init__.py", line 693, in reraise
    raise value
  File "/opt/google-cloud-sdk/lib/googlecloudsdk/core/util/retry.py", line 182, in TryFunc
    return func(*args, **kwargs), None
  File "/opt/google-cloud-sdk/lib/googlecloudsdk/core/credentials/google_auth_credentials.py", line 267, in _TokenEndpointRequestWithRetry
    _HandleErrorResponse(response_body)
  File "/opt/google-cloud-sdk/lib/googlecloudsdk/core/credentials/google_auth_credentials.py", line 294, in _HandleErrorResponse
    raise ReauthRequiredError('reauth is required.')
googlecloudsdk.core.credentials.google_auth_credentials.ReauthRequiredError: reauth is required.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/opt/google-cloud-sdk/lib/third_party/pyu2f/hid/linux.py", line 186, in Enumerate
    hidraw_devices = os.listdir('/sys/class/hidraw')
FileNotFoundError: [Errno 2] No such file or directory: '/sys/class/hidraw'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/opt/google-cloud-sdk/lib/googlecloudsdk/calliope/cli.py", line 987, in Execute
    resources = calliope_command.Run(cli=self, args=args)
  File "/opt/google-cloud-sdk/lib/googlecloudsdk/calliope/backend.py", line 804, in Run
    self._parent_group.RunGroupFilter(tool_context, args)
  File "/opt/google-cloud-sdk/lib/googlecloudsdk/calliope/backend.py", line 712, in RunGroupFilter
    self._parent_group.RunGroupFilter(context, args)
  File "/opt/google-cloud-sdk/lib/googlecloudsdk/calliope/backend.py", line 713, in RunGroupFilter
    self._common_type().Filter(context, args)
  File "/opt/google-cloud-sdk/lib/surface/container/__init__.py", line 57, in Filter
    context['api_adapter'] = api_adapter.NewAPIAdapter('v1')
  File "/opt/google-cloud-sdk/lib/googlecloudsdk/api_lib/container/api_adapter.py", line 360, in NewAPIAdapter
    return NewV1APIAdapter()
  File "/opt/google-cloud-sdk/lib/googlecloudsdk/api_lib/container/api_adapter.py", line 364, in NewV1APIAdapter
    return InitAPIAdapter('v1', V1Adapter)
  File "/opt/google-cloud-sdk/lib/googlecloudsdk/api_lib/container/api_adapter.py", line 386, in InitAPIAdapter
    api_client = core_apis.GetClientInstance('container', api_version)
  File "/opt/google-cloud-sdk/lib/googlecloudsdk/api_lib/util/apis.py", line 259, in GetClientInstance
    return apis_internal._GetClientInstance(api_name, api_version, no_http, None,
  File "/opt/google-cloud-sdk/lib/googlecloudsdk/api_lib/util/apis_internal.py", line 168, in _GetClientInstance
    http_client = transports.GetApitoolsTransport(
  File "/opt/google-cloud-sdk/lib/googlecloudsdk/core/credentials/transports.py", line 80, in GetApitoolsTransport
    session = requests.GetSession(
  File "/opt/google-cloud-sdk/lib/googlecloudsdk/core/credentials/requests.py", line 81, in GetSession
    session = request_wrapper.WrapQuota(session, enable_resource_quota,
  File "/opt/google-cloud-sdk/lib/googlecloudsdk/core/credentials/requests.py", line 124, in WrapQuota
    quota_project = self.QuotaProject(enable_resource_quota,
  File "/opt/google-cloud-sdk/lib/googlecloudsdk/core/credentials/transport.py", line 54, in QuotaProject
    creds = store.LoadIfEnabled(allow_account_impersonation, use_google_auth)
  File "/opt/google-cloud-sdk/lib/googlecloudsdk/core/credentials/store.py", line 453, in LoadIfEnabled
    return Load(
  File "/opt/google-cloud-sdk/lib/googlecloudsdk/core/credentials/store.py", line 563, in Load
    cred = _Load(
  File "/opt/google-cloud-sdk/lib/googlecloudsdk/core/credentials/store.py", line 726, in _Load
    RefreshIfAlmostExpire(cred)
  File "/opt/google-cloud-sdk/lib/googlecloudsdk/core/credentials/store.py", line 931, in RefreshIfAlmostExpire
    RefreshIfExpireWithinWindow(credentials, window=_CREDENTIALS_EXPIRY_WINDOW)
  File "/opt/google-cloud-sdk/lib/googlecloudsdk/core/credentials/store.py", line 927, in RefreshIfExpireWithinWindow
    Refresh(credentials)
  File "/opt/google-cloud-sdk/lib/googlecloudsdk/core/credentials/store.py", line 766, in Refresh
    _RefreshGoogleAuth(credentials, is_impersonated_credential,
  File "/opt/google-cloud-sdk/lib/googlecloudsdk/core/credentials/store.py", line 872, in _RefreshGoogleAuth
    credentials.refresh(request_client)
  File "/opt/google-cloud-sdk/lib/googlecloudsdk/core/credentials/creds.py", line 553, in _WrappedRefresh
    orig_refresh(request)
  File "/opt/google-cloud-sdk/lib/googlecloudsdk/core/credentials/google_auth_credentials.py", line 114, in refresh
    self._rapt_token = reauth.GetRaptToken(http_request, self._client_id,
  File "/opt/google-cloud-sdk/lib/third_party/oauth2client/contrib/reauth.py", line 287, in GetRaptToken
    rapt_token = ObtainRapt(
  File "/opt/google-cloud-sdk/lib/third_party/oauth2client/contrib/reauth.py", line 258, in ObtainRapt
    rapt = rm.ObtainProofOfReauth(requested_scopes=requested_scopes)
  File "/opt/google-cloud-sdk/lib/third_party/oauth2client/contrib/reauth.py", line 250, in ObtainProofOfReauth
    msg = self.DoOneRoundOfChallenges(msg)
  File "/opt/google-cloud-sdk/lib/third_party/oauth2client/contrib/reauth.py", line 225, in DoOneRoundOfChallenges
    next_msg = c.Execute(challenge, msg['sessionId'])
  File "/opt/google-cloud-sdk/lib/third_party/oauth2client/contrib/reauth.py", line 88, in Execute
    client_input = self.InternalObtainCredentials(metadata)
  File "/opt/google-cloud-sdk/lib/third_party/oauth2client/contrib/reauth.py", line 154, in InternalObtainCredentials
    response = api.Authenticate(app_id, challenge_data,
  File "/opt/google-cloud-sdk/lib/third_party/pyu2f/convenience/authenticator.py", line 44, in Authenticate
    result = authenticator.Authenticate(app_id,
  File "/opt/google-cloud-sdk/lib/third_party/pyu2f/convenience/localauthenticator.py", line 36, in Authenticate
    device = u2f.GetLocalU2FInterface(origin=self.origin)
  File "/opt/google-cloud-sdk/lib/third_party/pyu2f/u2f.py", line 36, in GetLocalU2FInterface
    for t in hid_transports:
  File "/opt/google-cloud-sdk/lib/third_party/pyu2f/hidtransport.py", line 36, in DiscoverLocalHIDU2FDevices
    for d in hid.Enumerate():
  File "/opt/google-cloud-sdk/lib/third_party/pyu2f/hid/linux.py", line 188, in Enumerate
    raise errors.OsHidError('No hidraw device is available')
pyu2f.errors.OsHidError: No hidraw device is available
2022-07-19 13:50:50,461 ERROR    ___FILE_ONLY___ BEGIN CRASH STACKTRACE
Traceback (most recent call last):
  File "/opt/google-cloud-sdk/lib/googlecloudsdk/core/credentials/google_auth_credentials.py", line 102, in refresh
    return self._Refresh(request)
  File "/opt/google-cloud-sdk/lib/googlecloudsdk/core/credentials/google_auth_credentials.py", line 129, in _Refresh
    access_token, refresh_token, expiry, grant_response = _RefreshGrant(
  File "/opt/google-cloud-sdk/lib/googlecloudsdk/core/credentials/google_auth_credentials.py", line 206, in _RefreshGrant
    response_data = _TokenEndpointRequestWithRetry(request, token_uri, body)
  File "/opt/google-cloud-sdk/lib/googlecloudsdk/core/util/retry.py", line 307, in DecoratedFunction
    return retryer.RetryOnException(f, args=args, kwargs=kwargs,
  File "/opt/google-cloud-sdk/lib/googlecloudsdk/core/util/retry.py", line 201, in RetryOnException
    exceptions.reraise(exc_info[1], tb=exc_info[2])
  File "/opt/google-cloud-sdk/lib/googlecloudsdk/core/exceptions.py", line 146, in reraise
    six.reraise(type(exc_value), exc_value, tb)
  File "/opt/google-cloud-sdk/lib/third_party/six/__init__.py", line 693, in reraise
    raise value
  File "/opt/google-cloud-sdk/lib/googlecloudsdk/core/util/retry.py", line 182, in TryFunc
    return func(*args, **kwargs), None
  File "/opt/google-cloud-sdk/lib/googlecloudsdk/core/credentials/google_auth_credentials.py", line 267, in _TokenEndpointRequestWithRetry
    _HandleErrorResponse(response_body)
  File "/opt/google-cloud-sdk/lib/googlecloudsdk/core/credentials/google_auth_credentials.py", line 294, in _HandleErrorResponse
    raise ReauthRequiredError('reauth is required.')
googlecloudsdk.core.credentials.google_auth_credentials.ReauthRequiredError: reauth is required.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/opt/google-cloud-sdk/lib/third_party/pyu2f/hid/linux.py", line 186, in Enumerate
    hidraw_devices = os.listdir('/sys/class/hidraw')
FileNotFoundError: [Errno 2] No such file or directory: '/sys/class/hidraw'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/opt/google-cloud-sdk/lib/googlecloudsdk/command_lib/crash_handling.py", line 191, in Wrapper
    target_function(*args, **kwargs)
  File "/opt/google-cloud-sdk/lib/googlecloudsdk/gcloud_main.py", line 186, in main
    gcloud_cli.Execute()
  File "/opt/google-cloud-sdk/lib/googlecloudsdk/calliope/cli.py", line 1013, in Execute
    self._HandleAllErrors(exc, command_path_string, specified_arg_names)
  File "/opt/google-cloud-sdk/lib/googlecloudsdk/calliope/cli.py", line 1050, in _HandleAllErrors
    exceptions.HandleError(exc, command_path_string, self.__known_error_handler)
  File "/opt/google-cloud-sdk/lib/googlecloudsdk/calliope/exceptions.py", line 547, in HandleError
    core_exceptions.reraise(exc)
  File "/opt/google-cloud-sdk/lib/googlecloudsdk/core/exceptions.py", line 146, in reraise
    six.reraise(type(exc_value), exc_value, tb)
  File "/opt/google-cloud-sdk/lib/third_party/six/__init__.py", line 693, in reraise
    raise value
  File "/opt/google-cloud-sdk/lib/googlecloudsdk/calliope/cli.py", line 987, in Execute
    resources = calliope_command.Run(cli=self, args=args)
  File "/opt/google-cloud-sdk/lib/googlecloudsdk/calliope/backend.py", line 804, in Run
    self._parent_group.RunGroupFilter(tool_context, args)
  File "/opt/google-cloud-sdk/lib/googlecloudsdk/calliope/backend.py", line 712, in RunGroupFilter
    self._parent_group.RunGroupFilter(context, args)
  File "/opt/google-cloud-sdk/lib/googlecloudsdk/calliope/backend.py", line 713, in RunGroupFilter
    self._common_type().Filter(context, args)
  File "/opt/google-cloud-sdk/lib/surface/container/__init__.py", line 57, in Filter
    context['api_adapter'] = api_adapter.NewAPIAdapter('v1')
  File "/opt/google-cloud-sdk/lib/googlecloudsdk/api_lib/container/api_adapter.py", line 360, in NewAPIAdapter
    return NewV1APIAdapter()
  File "/opt/google-cloud-sdk/lib/googlecloudsdk/api_lib/container/api_adapter.py", line 364, in NewV1APIAdapter
    return InitAPIAdapter('v1', V1Adapter)
  File "/opt/google-cloud-sdk/lib/googlecloudsdk/api_lib/container/api_adapter.py", line 386, in InitAPIAdapter
    api_client = core_apis.GetClientInstance('container', api_version)
  File "/opt/google-cloud-sdk/lib/googlecloudsdk/api_lib/util/apis.py", line 259, in GetClientInstance
    return apis_internal._GetClientInstance(api_name, api_version, no_http, None,
  File "/opt/google-cloud-sdk/lib/googlecloudsdk/api_lib/util/apis_internal.py", line 168, in _GetClientInstance
    http_client = transports.GetApitoolsTransport(
  File "/opt/google-cloud-sdk/lib/googlecloudsdk/core/credentials/transports.py", line 80, in GetApitoolsTransport
    session = requests.GetSession(
  File "/opt/google-cloud-sdk/lib/googlecloudsdk/core/credentials/requests.py", line 81, in GetSession
    session = request_wrapper.WrapQuota(session, enable_resource_quota,
  File "/opt/google-cloud-sdk/lib/googlecloudsdk/core/credentials/requests.py", line 124, in WrapQuota
    quota_project = self.QuotaProject(enable_resource_quota,
  File "/opt/google-cloud-sdk/lib/googlecloudsdk/core/credentials/transport.py", line 54, in QuotaProject
    creds = store.LoadIfEnabled(allow_account_impersonation, use_google_auth)
  File "/opt/google-cloud-sdk/lib/googlecloudsdk/core/credentials/store.py", line 453, in LoadIfEnabled
    return Load(
  File "/opt/google-cloud-sdk/lib/googlecloudsdk/core/credentials/store.py", line 563, in Load
    cred = _Load(
  File "/opt/google-cloud-sdk/lib/googlecloudsdk/core/credentials/store.py", line 726, in _Load
    RefreshIfAlmostExpire(cred)
  File "/opt/google-cloud-sdk/lib/googlecloudsdk/core/credentials/store.py", line 931, in RefreshIfAlmostExpire
    RefreshIfExpireWithinWindow(credentials, window=_CREDENTIALS_EXPIRY_WINDOW)
  File "/opt/google-cloud-sdk/lib/googlecloudsdk/core/credentials/store.py", line 927, in RefreshIfExpireWithinWindow
    Refresh(credentials)
  File "/opt/google-cloud-sdk/lib/googlecloudsdk/core/credentials/store.py", line 766, in Refresh
    _RefreshGoogleAuth(credentials, is_impersonated_credential,
  File "/opt/google-cloud-sdk/lib/googlecloudsdk/core/credentials/store.py", line 872, in _RefreshGoogleAuth
    credentials.refresh(request_client)
  File "/opt/google-cloud-sdk/lib/googlecloudsdk/core/credentials/creds.py", line 553, in _WrappedRefresh
    orig_refresh(request)
  File "/opt/google-cloud-sdk/lib/googlecloudsdk/core/credentials/google_auth_credentials.py", line 114, in refresh
    self._rapt_token = reauth.GetRaptToken(http_request, self._client_id,
  File "/opt/google-cloud-sdk/lib/third_party/oauth2client/contrib/reauth.py", line 287, in GetRaptToken
    rapt_token = ObtainRapt(
  File "/opt/google-cloud-sdk/lib/third_party/oauth2client/contrib/reauth.py", line 258, in ObtainRapt
    rapt = rm.ObtainProofOfReauth(requested_scopes=requested_scopes)
  File "/opt/google-cloud-sdk/lib/third_party/oauth2client/contrib/reauth.py", line 250, in ObtainProofOfReauth
    msg = self.DoOneRoundOfChallenges(msg)
  File "/opt/google-cloud-sdk/lib/third_party/oauth2client/contrib/reauth.py", line 225, in DoOneRoundOfChallenges
    next_msg = c.Execute(challenge, msg['sessionId'])
  File "/opt/google-cloud-sdk/lib/third_party/oauth2client/contrib/reauth.py", line 88, in Execute
    client_input = self.InternalObtainCredentials(metadata)
  File "/opt/google-cloud-sdk/lib/third_party/oauth2client/contrib/reauth.py", line 154, in InternalObtainCredentials
    response = api.Authenticate(app_id, challenge_data,
  File "/opt/google-cloud-sdk/lib/third_party/pyu2f/convenience/authenticator.py", line 44, in Authenticate
    result = authenticator.Authenticate(app_id,
  File "/opt/google-cloud-sdk/lib/third_party/pyu2f/convenience/localauthenticator.py", line 36, in Authenticate
    device = u2f.GetLocalU2FInterface(origin=self.origin)
  File "/opt/google-cloud-sdk/lib/third_party/pyu2f/u2f.py", line 36, in GetLocalU2FInterface
    for t in hid_transports:
  File "/opt/google-cloud-sdk/lib/third_party/pyu2f/hidtransport.py", line 36, in DiscoverLocalHIDU2FDevices
    for d in hid.Enumerate():
  File "/opt/google-cloud-sdk/lib/third_party/pyu2f/hid/linux.py", line 188, in Enumerate
    raise errors.OsHidError('No hidraw device is available')
pyu2f.errors.OsHidError: No hidraw device is available
2022-07-19 13:50:50,462 ERROR    root            gcloud crashed (OsHidError): No hidraw device is available
2022-07-19 13:50:50,462 INFO     ___FILE_ONLY___ 
If you would like to report this issue, please run the following command:

2022-07-19 13:50:50,462 INFO     ___FILE_ONLY___   gcloud feedback

2022-07-19 13:50:50,462 INFO     ___FILE_ONLY___ 
To check gcloud for common problems, please run the following command:

2022-07-19 13:50:50,462 INFO     ___FILE_ONLY___   gcloud info --run-diagnostics

